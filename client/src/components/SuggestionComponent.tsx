import { ReactNode } from "react";
import { View } from "react-native";
import TextDefault from "./TextDefault";
import React from "react";
import Colors from "../constants/Colors";

const emojiMap: { [key: string]: ReactNode } = {
    "Good": "üòÅ",       // M·∫∑t c∆∞·ªùi vui v·∫ª
    "Moderate": "üôÇ",   // M·∫∑t b√¨nh th∆∞·ªùng
    "Unhealthy": "üò∑",  // M·∫∑t ƒëeo kh·∫©u trang
    "Hazardous": "‚ò†Ô∏è"  // ƒê·∫ßu l√¢u c·∫£nh b√°o
};
const suggestion: { [key: string]: string } = {
    "Good": "ƒêi·ªÅu ki·ªán kh√¥ng kh√≠ t·ªët",
    "Moderate": "ƒêi·ªÅu ki·ªán kh√¥ng kh√≠ b√¨nh th∆∞·ªùng", 
    "Unhealthy": "C·∫ßn trang b·ªã kh·∫©u trang", 
    "Hazardous": "H·∫°n ch·∫ø ra ƒë∆∞·ªùng n·∫øu kh√¥ng c·∫ßn thi·∫øt"
};
const colors: { [key: string]: string } = {
    "Good": Colors.light.green,
    "Moderate": Colors.light.yellow,
    "Unhealthy": Colors.light.orange, 
    "Hazardous": Colors.light.danger 
};
interface Props {
    iconType?: string,
    background? : string,
    style?: string, 
    title?: string,
    full?: boolean,

}


const SuggestionComponent = (props: Props) =>{
    const {
        background,
        style,
        title,
        iconType,
        full
    }  = props
    
    return (
            <View style={[
                {
                    flexDirection: 'row',
                    alignItems: 'center',
                    backgroundColor: colors[iconType || "Moderate"],
                    marginHorizontal: 10,
                    paddingHorizontal: 20,
                    borderRadius: 20,
                },
                full && { width: '100%' },
                // background && { backgroundColor: background }
            ]}>
                {iconType && <TextDefault size={14} color={Colors.light.textSecond}>{suggestion[iconType]}</TextDefault>} 
                {iconType && (
                <TextDefault style={{ fontSize: 24 }}>
                    {emojiMap[iconType] || "‚ùì"} 
                </TextDefault>

            )}
        </View>
    )
}

export default SuggestionComponent;